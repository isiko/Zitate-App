// [[SETUP]]
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// [[QUOTES]]
model Quote {
    id      String @id @default(uuid())

    lines   QuoteLine[]
    date    DateTime @default(now())
    creator User @relation(fields: [creatorID], references: [id])

    creatorID String
}

model QuoteLine {
    id          String  @id @default(uuid())

    line        String
    authorAlias String?
    author      User?   @relation(fields: [userID], references: [id])
    quote       Quote   @relation(fields: [quoteID], references: [id])

    quoteID     String
    userID      String?
}

// [[AUTHENTIFICATION]] (NextAuth)
// Mostly copyied from here -> https://next-auth.js.org/adapters/prisma
model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  
  aliases       QuoteLine[]
  posts         Quote[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
